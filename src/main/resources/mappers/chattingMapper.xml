<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.websocketproject.mapper.ChatMapper">
    <insert id="chatMessage" parameterType="com.example.websocketproject.entity.ChatMessageDTO">
        insert into chatmessage(id, sender, message)
        values(#{id}, #{sender}, #{message})
    </insert>

    <select id="chatList" parameterType="String" resultType="com.example.websocketproject.entity.ChattingRoomDTO">
        select *
        from chattingroom
        where response_user = #{id}
        or request_user = #{id}
    </select>

    <select id="roadChat" parameterType="String" resultType="com.example.websocketproject.entity.ChatMessageDTO">
        select *
        from chatmessage
        where id = #{id}
        order by num DESC LIMIT 15;
    </select>

    <select id="matching" parameterType="String" resultType="com.example.websocketproject.entity.User">
        select *
        from member
        where mbti = #{mbti}
        and gender = #{gender}
        and user_id != #{user_id}
        order by RAND() LIMIT 1;
    </select>

    <select id="matchingRandom" parameterType="String" resultType="com.example.websocketproject.entity.User">
        select *
        from member
        where gender = #{gender}
        and user_id != #{user_id}
        order by RAND() LIMIT 1;
    </select>

    <insert id="createdRoom" parameterType="String">
        insert into chattingroom(request_user, response_user)
        values(#{request_user}, #{response_user})
    </insert>

    <select id="firstMessage" parameterType="String" resultType="int">
        select id
        from chattingroom
        where request_user = #{request_user}
        and response_user = #{response_user}
    </select>

    <select id="setCreatedRoom" parameterType="String" resultType="com.example.websocketproject.entity.ChattingRoomDTO">
        select *
        from chattingroom
        where request_user = #{request_user}
        and response_user = #{response_user}
    </select>

    <select id="roadNextChat" parameterType="int" resultType="com.example.websocketproject.entity.ChatMessageDTO">
        select *
        from chatmessage
        where id = #{id}
        and num <![CDATA[ < ]]> #{num}
        order by num DESC
    </select>

    <select id="checkRoom" parameterType="int" resultType="com.example.websocketproject.entity.ChattingRoomDTO">
        select *
        from chattingroom
        where id = #{id}
    </select>

    <update id="deleteRoom">
        update chattingroom
        set deleteUser = #{user_id}
        where id = #{id}
    </update>

    <update id="adminManageRoom" parameterType="int">
        update chattingroom
        set deleteUser = "admin"
        where id = #{id}
    </update>
</mapper>